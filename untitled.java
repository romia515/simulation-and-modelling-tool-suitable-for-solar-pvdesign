import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class untitled
{
	public static void set_array(long cxt, String name, String csvFile, int len) {
		BufferedReader br = null;
		String line;
		double[] ary = new double[len];
		int i = 0;
		try {
			br = new BufferedReader(new FileReader(csvFile));
			while (((line = br.readLine()) != null) && (i < len)) {
				ary[i] = Double.parseDouble(line);
				i++;
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null) {
				try {
					br.close();
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		SSCAPIJNI.ssc_data_set_array(cxt, name, ary, len);
	}

	public static void set_matrix(long cxt, String name, String csvFile, int nr, int nc) {
		BufferedReader br = null;
		String line;
		String[] values;
		String cvsSplitBy = ",";
		int len = nr * nc;
		double[] ary = new double[len];
		int i = 0;
		try {
			br = new BufferedReader(new FileReader(csvFile));
			while (((line = br.readLine()) != null) && (i < len)) {
				values = line.split(cvsSplitBy);
				for (String value : values) {
					ary[i] = Double.parseDouble(value);
					i++;
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null) {
				try {
					br.close();
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		SSCAPIJNI.ssc_data_set_matrix(cxt, name, ary, nr, nc);
	}

	public static void main(String[] args) {
		System.loadLibrary("SSCAPIJNI");

		final String currentDirectory = System.getProperty("user.dir");

		System.load(currentDirectory + "\\ssc.dll");

		System.out.printf("Current folder = %s\n", currentDirectory);
		System.out.printf("SSC Version = %d\n", SSCAPIJNI.ssc_version());
		System.out.printf("SSC Build Information = %s\n", SSCAPIJNI.ssc_build_info());
		SSCAPIJNI.ssc_module_exec_set_print(0);
		long data = SSCAPIJNI.ssc_data_create();
		long mod;

		SSCAPIJNI.ssc_data_set_number(data, "en_belpe", 0f);
		set_array(data, "load", currentDirectory + "\\load.csv", 8760);
		SSCAPIJNI.ssc_data_set_string(data, "solar_resource_file", currentDirectory + "\\phoenix_az_33.450495_-111.983688_psmv3_60_tmy.csv");
		SSCAPIJNI.ssc_data_set_number(data, "floor_area", 2000f);
		SSCAPIJNI.ssc_data_set_number(data, "Stories", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "YrBuilt", 1980f);
		SSCAPIJNI.ssc_data_set_number(data, "Retrofits", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "Occupants", 4f);
		double[] p_Occ_Schedule = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_array(data, "Occ_Schedule", p_Occ_Schedule, 24);
		SSCAPIJNI.ssc_data_set_number(data, "THeat", 68f);
		SSCAPIJNI.ssc_data_set_number(data, "TCool", 76f);
		SSCAPIJNI.ssc_data_set_number(data, "THeatSB", 68f);
		SSCAPIJNI.ssc_data_set_number(data, "TCoolSB", 76f);
		double[] p_T_Sched = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_array(data, "T_Sched", p_T_Sched, 24);
		SSCAPIJNI.ssc_data_set_number(data, "en_heat", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_cool", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_fridge", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_range", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_dish", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_wash", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_dry", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_mels", 1f);
		double[] p_Monthly_util = {725f, 630f, 665f, 795f, 1040f, 1590f, 1925f, 1730f, 1380f, 1080f, 635f, 715f};
		SSCAPIJNI.ssc_data_set_array(data, "Monthly_util", p_Monthly_util, 12);
		mod = SSCAPIJNI.ssc_module_create("belpe");
		if (SSCAPIJNI.ssc_module_exec(mod, data) == 0) {
			System.out.println("error during simulation 1.");
			SSCAPIJNI.ssc_module_free(mod);
			SSCAPIJNI.ssc_data_free(data);
			return;
		}
		SSCAPIJNI.ssc_module_free(mod);
		SSCAPIJNI.ssc_data_set_number(data, "transformer_no_load_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "transformer_load_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "system_use_lifetime_output", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "analysis_period", 25f);
		double[] p_dc_degradation = {0.5f};
		SSCAPIJNI.ssc_data_set_array(data, "dc_degradation", p_dc_degradation, 1);
		SSCAPIJNI.ssc_data_set_number(data, "en_dc_lifetime_losses", 0f);
		set_array(data, "dc_lifetime_losses", currentDirectory + "\\dc_lifetime_losses.csv", 9125);
		SSCAPIJNI.ssc_data_set_number(data, "en_ac_lifetime_losses", 0f);
		set_array(data, "ac_lifetime_losses", currentDirectory + "\\ac_lifetime_losses.csv", 9125);
		SSCAPIJNI.ssc_data_set_number(data, "save_full_lifetime_variables", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "en_snow_model", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "system_capacity", 4.6928696632385254f);
		SSCAPIJNI.ssc_data_set_number(data, "use_wf_albedo", 0f);
		double[] p_albedo = {0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f, 0.20000000000000001f};
		SSCAPIJNI.ssc_data_set_array(data, "albedo", p_albedo, 12);
		SSCAPIJNI.ssc_data_set_number(data, "irrad_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "sky_model", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "inverter_count", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "enable_mismatch_vmax_calc", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_nstrings", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_modules_per_string", 7f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_mppt_input", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_tilt", 20f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_tilt_eq_lat", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_azimuth", 180f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_track_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_rotlim", 45f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_shade_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_gcr", 0.29999999999999999f);
		double[] p_subarray1_monthly_tilt = {40f, 40f, 40f, 20f, 20f, 20f, 20f, 20f, 20f, 40f, 40f, 40f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray1_monthly_tilt", p_subarray1_monthly_tilt, 12);
		double[] p_subarray1_soiling = {5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray1_soiling", p_subarray1_soiling, 12);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_rear_irradiance_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_mismatch_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_diodeconn_loss", 0.5f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_dcwiring_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_tracking_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_nameplate_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_rear_irradiance_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_mismatch_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_diodeconn_loss", 0.5f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_dcwiring_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_tracking_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_nameplate_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_rear_irradiance_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_mismatch_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_diodeconn_loss", 0.5f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_dcwiring_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_tracking_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_nameplate_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_rear_irradiance_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_mismatch_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_diodeconn_loss", 0.5f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_dcwiring_loss", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_tracking_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_nameplate_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "dcoptimizer_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "acwiring_loss", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "transmission_loss", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_mod_orient", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_nmodx", 7f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_nmody", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray1_backtrack", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_enable", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_modules_per_string", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_nstrings", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_mppt_input", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_tilt", 20f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_tilt_eq_lat", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_azimuth", 180f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_track_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_rotlim", 45f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_shade_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_gcr", 0.29999999999999999f);
		double[] p_subarray2_monthly_tilt = {40f, 40f, 40f, 20f, 20f, 20f, 20f, 20f, 20f, 40f, 40f, 40f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray2_monthly_tilt", p_subarray2_monthly_tilt, 12);
		double[] p_subarray2_soiling = {5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray2_soiling", p_subarray2_soiling, 12);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_mod_orient", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_nmodx", 9f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_nmody", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray2_backtrack", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_enable", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_modules_per_string", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_nstrings", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_mppt_input", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_tilt", 20f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_tilt_eq_lat", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_azimuth", 180f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_track_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_rotlim", 45f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_shade_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_gcr", 0.29999999999999999f);
		double[] p_subarray3_monthly_tilt = {40f, 40f, 40f, 20f, 20f, 20f, 20f, 20f, 20f, 40f, 40f, 40f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray3_monthly_tilt", p_subarray3_monthly_tilt, 12);
		double[] p_subarray3_soiling = {5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray3_soiling", p_subarray3_soiling, 12);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_mod_orient", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_nmodx", 9f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_nmody", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray3_backtrack", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_enable", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_modules_per_string", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_nstrings", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_mppt_input", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_tilt", 20f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_tilt_eq_lat", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_azimuth", 180f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_track_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_rotlim", 45f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_shade_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_gcr", 0.29999999999999999f);
		double[] p_subarray4_monthly_tilt = {40f, 40f, 40f, 20f, 20f, 20f, 20f, 20f, 20f, 40f, 40f, 40f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray4_monthly_tilt", p_subarray4_monthly_tilt, 12);
		double[] p_subarray4_soiling = {5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f};
		SSCAPIJNI.ssc_data_set_array(data, "subarray4_soiling", p_subarray4_soiling, 12);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_mod_orient", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_nmodx", 9f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_nmody", 2f);
		SSCAPIJNI.ssc_data_set_number(data, "subarray4_backtrack", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "module_model", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "module_aspect_ratio", 1.7f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_area", 0.74073999999999995f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_rad0", 200f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_rad1", 400f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_rad2", 600f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_rad3", 800f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_rad4", 1000f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_eff0", 13.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_eff1", 13.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_eff2", 13.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_eff3", 13.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_eff4", 13.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_reference", 4f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_module_structure", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_a", -3.5600000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_b", -0.074999999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_dT", 3f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_temp_coeff", -0.5f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_fd", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_vmp", 30f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_voc", 36f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_is_bifacial", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_bifacial_transmission_factor", 0.012999999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_bifaciality", 0.65000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "spe_bifacial_ground_clearance_height", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_area", 1.631f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_a_ref", 2.420331f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_adjust", 4.8697939999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_alpha_sc", 0.0024919999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_beta_oc", -0.16975000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_gamma_r", -0.31f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_i_l_ref", 6.2368050000000004f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_i_mp_ref", 5.8499999999999996f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_i_o_ref", 3.98831e-12f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_i_sc_ref", 6.2300000000000004f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_n_s", 96f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_r_s", 0.499388f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_r_sh_ref", 457.18569000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_t_noct", 46.399999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_v_mp_ref", 57.299999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_v_oc_ref", 67.900000000000006f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_temp_corr_mode", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_is_bifacial", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_bifacial_transmission_factor", 0.012999999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_bifaciality", 0.65000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_bifacial_ground_clearance_height", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_standoff", 6f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_height", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_mounting_config", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_heat_transfer", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_mounting_orientation", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_gap_spacing", 0.050000000000000003f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_module_width", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_module_length", 1.6310000419616699f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_array_rows", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_array_cols", 10f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_backside_temp", 20f);
		SSCAPIJNI.ssc_data_set_number(data, "cec_transient_thermal_model_unit_mass", 11.091900000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_celltech", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_vmp", 30f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_imp", 6f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_voc", 37f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_isc", 7f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_bvoc", -0.10999999940395355f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_aisc", 0.0040000001899898052f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_gpmp", -0.40999999999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_nser", 60f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_area", 1.3f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_tnoct", 46f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_standoff", 6f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_mounting", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_is_bifacial", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_bifacial_transmission_factor", 0.012999999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_bifaciality", 0.65000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_bifacial_ground_clearance_height", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "6par_transient_thermal_model_unit_mass", 11.091900000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_module_structure", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a", -3.6200000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b", -0.074999999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_dtc", 3f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_ref_a", -3.619999885559082f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_ref_b", -0.075000002980232239f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_ref_dT", 3f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_fd", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a0", 0.94045000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a1", 0.052641f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a2", -0.0093897000000000008f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a3", 0.00072623000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_a4", -1.9938000000000001e-05f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_aimp", -0.00038000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_aisc", 0.00060999999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_area", 1.244f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b0", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b1", -0.0024380000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b2", 0.00031030000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b3", -1.2459999999999999e-05f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b4", 2.11e-07f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_b5", -1.3600000000000001e-09f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_bvmpo", -0.13900000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_bvoco", -0.13600000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c0", 1.0039f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c1", -0.0038999999999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c2", 0.29106599999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c3", -4.7354599999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c4", 0.99419999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c5", 0.0057999999999999996f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c6", 1.0723f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_c7", -0.072300000000000003f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_impo", 5.25f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_isco", 5.75f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_ixo", 5.6500000000000004f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_ixxo", 3.8500000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_mbvmp", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_mbvoc", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_n", 1.2210000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_series_cells", 72f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_vmpo", 40f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_voco", 47.700000000000003f);
		SSCAPIJNI.ssc_data_set_number(data, "snl_transient_thermal_model_unit_mass", 11.091900000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_nser", 116f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_area", 0.71999999999999997f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_AMa0", 0.94169999999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_AMa1", 0.065159999999999996f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_AMa2", -0.020219999999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_AMa3", 0.0021900000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_AMa4", -9.1000000000000003e-05f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_glass", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_tnoct", 44.899999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_standoff", 6f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_mounting", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Vmp0", 64.599998474121094f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Imp0", 1.0499999523162842f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Voc0", 87f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Isc0", 1.1799999475479126f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_alphaIsc", 0.000472001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_n", 1.4507099999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Il", 1.1895100000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Io", 2.08522e-09f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_Egref", 0.73766799999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_d1", 13.5504f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_d2", -0.0769735f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_d3", 0.23732700000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_c1", 1930.1500000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_c2", 474.63999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "sd11par_c3", 1.48746f);
		SSCAPIJNI.ssc_data_set_number(data, "inverter_model", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "mppt_low_inverter", 100f);
		SSCAPIJNI.ssc_data_set_number(data, "mppt_hi_inverter", 480f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_num_mppt", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_c0", -3.0813800000000001e-06f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_c1", -4.8000000000000001e-05f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_c2", 0.00012400000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_c3", -0.001632f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_paco", 3850f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_pdco", 3964.4057619999999f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_pnt", 1.155f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_pso", 17.885603f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_vdco", 400f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_vdcmax", 480f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_c0", -3.1752000000000001e-06f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_c1", -5.1231399999999999e-05f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_c2", 0.00098359599999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_c3", -0.0015077999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_paco", 3800f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_pdco", 3928.1100000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_pnt", 0.98999999999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_psco", 19.448399999999999f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_vdco", 398.49700000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_vdcmax", 600f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_paco", 4000f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_eff", 96f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_pnt", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_pso", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_vdco", 310f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_ds_vdcmax", 600f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_paco", 4000f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_pdco", 4210.5263671875f);
		double[] p_inv_pd_partload = {0f, 0.40400000000000003f, 0.80800000000000005f, 1.212f, 1.6160000000000001f, 2.02f, 2.4239999999999999f, 2.8279999999999998f, 3.2320000000000002f, 3.6360000000000001f, 4.04f, 4.444f, 4.8479999999999999f, 5.2519999999999998f, 5.6559999999999997f, 6.0599999999999996f, 6.4640000000000004f, 6.8680000000000003f, 7.2720000000000002f, 7.6760000000000002f, 8.0800000000000001f, 8.484f, 8.8879999999999999f, 9.2919999999999998f, 9.6959999999999997f, 10.1f, 10.504f, 10.907999999999999f, 11.311999999999999f, 11.715999999999999f, 12.119999999999999f, 12.523999999999999f, 12.928000000000001f, 13.332000000000001f, 13.736000000000001f, 14.140000000000001f, 14.544f, 14.948f, 15.352f, 15.756f, 16.16f, 16.564f, 16.968f, 17.372f, 17.776f, 18.18f, 18.584f, 18.988f, 19.391999999999999f, 19.795999999999999f, 20.199999999999999f, 20.603999999999999f, 21.007999999999999f, 21.411999999999999f, 21.815999999999999f, 22.219999999999999f, 22.623999999999999f, 23.027999999999999f, 23.431999999999999f, 23.835999999999999f, 24.239999999999998f, 24.643999999999998f, 25.047999999999998f, 25.452000000000002f, 25.856000000000002f, 26.260000000000002f, 26.664000000000001f, 27.068000000000001f, 27.472000000000001f, 27.876000000000001f, 28.280000000000001f, 28.684000000000001f, 29.088000000000001f, 29.492000000000001f, 29.896000000000001f, 30.300000000000001f, 30.704000000000001f, 31.108000000000001f, 31.512f, 31.916f, 32.32f, 32.723999999999997f, 33.128f, 33.531999999999996f, 33.936f, 34.340000000000003f, 34.744f, 35.148000000000003f, 35.552f, 35.956000000000003f, 36.359999999999999f, 36.764000000000003f, 37.167999999999999f, 37.572000000000003f, 37.975999999999999f, 38.380000000000003f, 38.783999999999999f, 39.188000000000002f, 39.591999999999999f, 39.996000000000002f, 40.399999999999999f, 40.804000000000002f, 41.207999999999998f, 41.612000000000002f, 42.015999999999998f, 42.420000000000002f, 42.823999999999998f, 43.228000000000002f, 43.631999999999998f, 44.036000000000001f, 44.439999999999998f, 44.844000000000001f, 45.247999999999998f, 45.652000000000001f, 46.055999999999997f, 46.460000000000001f, 46.863999999999997f, 47.268000000000001f, 47.671999999999997f, 48.076000000000001f, 48.479999999999997f, 48.884f, 49.287999999999997f, 49.692f, 50.095999999999997f, 50.5f, 50.904000000000003f, 51.308f, 51.712000000000003f, 52.116f, 52.520000000000003f, 52.923999999999999f, 53.328000000000003f, 53.731999999999999f, 54.136000000000003f, 54.539999999999999f, 54.944000000000003f, 55.347999999999999f, 55.752000000000002f, 56.155999999999999f, 56.560000000000002f, 56.963999999999999f, 57.368000000000002f, 57.771999999999998f, 58.176000000000002f, 58.579999999999998f, 58.984000000000002f, 59.387999999999998f, 59.792000000000002f, 60.195999999999998f, 60.600000000000001f, 61.003999999999998f, 61.408000000000001f, 61.811999999999998f, 62.216000000000001f, 62.619999999999997f, 63.024000000000001f, 63.427999999999997f, 63.832000000000001f, 64.236000000000004f, 64.640000000000001f, 65.043999999999997f, 65.447999999999993f, 65.852000000000004f, 66.256f, 66.659999999999997f, 67.063999999999993f, 67.468000000000004f, 67.872f, 68.275999999999996f, 68.680000000000007f, 69.084000000000003f, 69.488f, 69.891999999999996f, 70.296000000000006f, 70.700000000000003f, 71.103999999999999f, 71.507999999999996f, 71.912000000000006f, 72.316000000000003f, 72.719999999999999f, 73.123999999999995f, 73.528000000000006f, 73.932000000000002f, 74.335999999999999f, 74.739999999999995f, 75.144000000000005f, 75.548000000000002f, 75.951999999999998f, 76.355999999999995f, 76.760000000000005f, 77.164000000000001f, 77.567999999999998f, 77.971999999999994f, 78.376000000000005f, 78.780000000000001f, 79.183999999999997f, 79.587999999999994f, 79.992000000000004f, 80.396000000000001f, 80.799999999999997f, 81.203999999999994f, 81.608000000000004f, 82.012f, 82.415999999999997f, 82.819999999999993f, 83.224000000000004f, 83.628f, 84.031999999999996f, 84.436000000000007f, 84.840000000000003f, 85.244f, 85.647999999999996f, 86.052000000000007f, 86.456000000000003f, 86.859999999999999f, 87.263999999999996f, 87.668000000000006f, 88.072000000000003f, 88.475999999999999f, 88.879999999999995f, 89.284000000000006f, 89.688000000000002f, 90.091999999999999f, 90.495999999999995f, 90.900000000000006f, 91.304000000000002f, 91.707999999999998f, 92.111999999999995f, 92.516000000000005f, 92.920000000000002f, 93.323999999999998f, 93.727999999999994f, 94.132000000000005f, 94.536000000000001f, 94.939999999999998f, 95.343999999999994f, 95.748000000000005f, 96.152000000000001f, 96.555999999999997f, 96.959999999999994f, 97.364000000000004f, 97.768000000000001f, 98.171999999999997f, 98.575999999999993f, 98.980000000000004f, 99.384f, 99.787999999999997f, 100.19199999999999f, 100.596f, 101f};
		SSCAPIJNI.ssc_data_set_array(data, "inv_pd_partload", p_inv_pd_partload, 251);
		double[] p_inv_pd_efficiency = {0f, 0f, 34.420000000000002f, 55.200000000000003f, 65.590000000000003f, 71.819999999999993f, 75.969999999999999f, 78.939999999999998f, 81.170000000000002f, 82.900000000000006f, 84.280000000000001f, 85.420000000000002f, 86.359999999999999f, 87.159999999999997f, 87.840000000000003f, 88.439999999999998f, 88.950000000000003f, 89.409999999999997f, 89.819999999999993f, 90.180000000000007f, 90.510000000000005f, 90.810000000000002f, 91.079999999999998f, 91.319999999999993f, 91.549999999999997f, 91.75f, 91.950000000000003f, 92.120000000000005f, 92.290000000000006f, 92.439999999999998f, 92.579999999999998f, 92.719999999999999f, 92.840000000000003f, 92.959999999999994f, 93.069999999999993f, 93.170000000000002f, 93.269999999999996f, 93.370000000000005f, 93.450000000000003f, 93.540000000000006f, 93.620000000000005f, 93.689999999999998f, 93.760000000000005f, 93.829999999999998f, 93.900000000000006f, 93.959999999999994f, 94.019999999999996f, 94.079999999999998f, 94.129999999999995f, 94.180000000000007f, 94.230000000000004f, 94.280000000000001f, 94.329999999999998f, 94.370000000000005f, 94.420000000000002f, 94.459999999999994f, 94.5f, 94.540000000000006f, 94.569999999999993f, 94.609999999999999f, 94.640000000000001f, 94.680000000000007f, 94.709999999999994f, 94.739999999999995f, 94.769999999999996f, 94.799999999999997f, 94.829999999999998f, 94.859999999999999f, 94.890000000000001f, 94.909999999999997f, 94.939999999999998f, 94.959999999999994f, 94.980000000000004f, 95.010000000000005f, 95.030000000000001f, 95.049999999999997f, 95.069999999999993f, 95.090000000000003f, 95.109999999999999f, 95.129999999999995f, 95.150000000000006f, 95.170000000000002f, 95.189999999999998f, 95.209999999999994f, 95.230000000000004f, 95.239999999999995f, 95.260000000000005f, 95.280000000000001f, 95.290000000000006f, 95.310000000000002f, 95.319999999999993f, 95.340000000000003f, 95.349999999999994f, 95.359999999999999f, 95.379999999999995f, 95.390000000000001f, 95.400000000000006f, 95.420000000000002f, 95.430000000000007f, 95.439999999999998f, 95.450000000000003f, 95.469999999999999f, 95.480000000000004f, 95.489999999999995f, 95.5f, 95.510000000000005f, 95.519999999999996f, 95.530000000000001f, 95.540000000000006f, 95.549999999999997f, 95.560000000000002f, 95.569999999999993f, 95.579999999999998f, 95.590000000000003f, 95.599999999999994f, 95.609999999999999f, 95.620000000000005f, 95.629999999999995f, 95.640000000000001f, 95.640000000000001f, 95.650000000000006f, 95.659999999999997f, 95.670000000000002f, 95.680000000000007f, 95.680000000000007f, 95.689999999999998f, 95.700000000000003f, 95.709999999999994f, 95.709999999999994f, 95.719999999999999f, 95.730000000000004f, 95.730000000000004f, 95.739999999999995f, 95.75f, 95.75f, 95.760000000000005f, 95.769999999999996f, 95.769999999999996f, 95.780000000000001f, 95.780000000000001f, 95.790000000000006f, 95.799999999999997f, 95.799999999999997f, 95.810000000000002f, 95.810000000000002f, 95.819999999999993f, 95.819999999999993f, 95.829999999999998f, 95.829999999999998f, 95.840000000000003f, 95.840000000000003f, 95.849999999999994f, 95.849999999999994f, 95.859999999999999f, 95.859999999999999f, 95.870000000000005f, 95.870000000000005f, 95.879999999999995f, 95.879999999999995f, 95.890000000000001f, 95.890000000000001f, 95.890000000000001f, 95.900000000000006f, 95.900000000000006f, 95.909999999999997f, 95.909999999999997f, 95.909999999999997f, 95.920000000000002f, 95.920000000000002f, 95.930000000000007f, 95.930000000000007f, 95.930000000000007f, 95.939999999999998f, 95.939999999999998f, 95.939999999999998f, 95.950000000000003f, 95.950000000000003f, 95.959999999999994f, 95.959999999999994f, 95.959999999999994f, 95.969999999999999f, 95.969999999999999f, 95.969999999999999f, 95.980000000000004f, 95.980000000000004f, 95.980000000000004f, 95.980000000000004f, 95.989999999999995f, 95.989999999999995f, 95.989999999999995f, 96f, 96f, 96f, 96.010000000000005f, 96.010000000000005f, 96.010000000000005f, 96.010000000000005f, 96.019999999999996f, 96.019999999999996f, 96.019999999999996f, 96.019999999999996f, 96.030000000000001f, 96.030000000000001f, 96.030000000000001f, 96.030000000000001f, 96.040000000000006f, 96.040000000000006f, 96.040000000000006f, 96.040000000000006f, 96.049999999999997f, 96.049999999999997f, 96.049999999999997f, 96.049999999999997f, 96.060000000000002f, 96.060000000000002f, 96.060000000000002f, 96.060000000000002f, 96.060000000000002f, 96.069999999999993f, 96.069999999999993f, 96.069999999999993f, 96.069999999999993f, 96.069999999999993f, 96.079999999999998f, 96.079999999999998f, 96.079999999999998f, 96.079999999999998f, 96.079999999999998f, 96.090000000000003f, 96.090000000000003f, 96.090000000000003f, 96.090000000000003f, 96.090000000000003f, 96.090000000000003f, 96.099999999999994f, 96.099999999999994f, 96.099999999999994f, 96.099999999999994f, 96.099999999999994f, 96.099999999999994f, 96.109999999999999f, 96.109999999999999f, 96.109999999999999f, 96.109999999999999f, 96.109999999999999f, 96.109999999999999f, 96.120000000000005f, 96.120000000000005f, 96.120000000000005f, 96.120000000000005f, 96.120000000000005f};
		SSCAPIJNI.ssc_data_set_array(data, "inv_pd_efficiency", p_inv_pd_efficiency, 251);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_pnt", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_vdco", 310f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_vdcmax", 600f);
		double[] p_inv_tdc_cec_db = {800f, 28f, -0.02f, 56f, 0f, 600f, 52f, -0.037499999999999999f, 60f, 0f, 390f, 38f, -0.012500000000000001f, 50f, -0.025000000000000001f};
		SSCAPIJNI.ssc_data_set_matrix(data, "inv_tdc_cec_db", p_inv_tdc_cec_db, 3, 5);
		double[] p_inv_tdc_cec_cg = {800f, 28f, -0.02f, 56f, 0f, 600f, 52f, -0.037499999999999999f, 60f, 0f, 390f, 38f, -0.012500000000000001f, 50f, -0.025000000000000001f};
		SSCAPIJNI.ssc_data_set_matrix(data, "inv_tdc_cec_cg", p_inv_tdc_cec_cg, 3, 5);
		double[] p_inv_tdc_ds = {800f, 28f, -0.02f, 56f, 0f, 600f, 52f, -0.037499999999999999f, 60f, 0f, 390f, 38f, -0.012500000000000001f, 50f, -0.025000000000000001f};
		SSCAPIJNI.ssc_data_set_matrix(data, "inv_tdc_ds", p_inv_tdc_ds, 3, 5);
		double[] p_inv_tdc_plc = {800f, 28f, -0.02f, 56f, 0f, 600f, 52f, -0.037499999999999999f, 60f, 0f, 390f, 38f, -0.012500000000000001f, 50f, -0.025000000000000001f};
		SSCAPIJNI.ssc_data_set_matrix(data, "inv_tdc_plc", p_inv_tdc_plc, 3, 5);
		SSCAPIJNI.ssc_data_set_number(data, "en_batt", 1f);
		set_array(data, "crit_load", currentDirectory + "\\crit_load.csv", 8760);
		double[] p_load_escalation = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "load_escalation", p_load_escalation, 1);
		SSCAPIJNI.ssc_data_set_number(data, "adjust:constant", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "dc_adjust:constant", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_chem", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_snl_eff_cec", 97.053115844726562f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_pd_eff", 95f);
		SSCAPIJNI.ssc_data_set_number(data, "inv_cec_cg_eff_cec", 96.636390686035156f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_ac_or_dc", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dc_dc_efficiency", 99f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dc_ac_efficiency", 96f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_ac_dc_efficiency", 96f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_meter_position", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_inverter_efficiency_cutoff", 90f);
		double[] p_batt_losses = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_losses", p_batt_losses, 1);
		double[] p_batt_losses_charging = {0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_losses_charging", p_batt_losses_charging, 12);
		double[] p_batt_losses_discharging = {0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_losses_discharging", p_batt_losses_discharging, 12);
		double[] p_batt_losses_idle = {0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_losses_idle", p_batt_losses_idle, 12);
		SSCAPIJNI.ssc_data_set_number(data, "batt_loss_choice", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_current_choice", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_computed_strings", 6f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_computed_series", 139f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_computed_bank_capacity", 9.6076803207397461f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_current_charge_max", 9.6000003814697266f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_current_discharge_max", 9.6000003814697266f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_power_charge_max_kwdc", 4.803840160369873f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_power_discharge_max_kwdc", 4.803840160369873f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_power_charge_max_kwac", 5.004000186920166f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_power_discharge_max_kwac", 4.6116862297058105f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_voltage_choice", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Vfull", 4.2000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Vexp", 3.5299999999999998f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Vnom", 3.3420000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Vnom_default", 3.6000000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Qfull", 3.2000000000000002f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Qfull_flow", 19.200000762939453f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Qexp", 2.5840001106262207f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Qnom", 3.125999927520752f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_C_rate", 0.20000000000000001f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_resistance", 0.001155f);
		double[] p_batt_voltage_matrix = {0f, 0f};
		SSCAPIJNI.ssc_data_set_matrix(data, "batt_voltage_matrix", p_batt_voltage_matrix, 1, 2);
		SSCAPIJNI.ssc_data_set_number(data, "LeadAcid_q20_computed", 19.200000762939453f);
		SSCAPIJNI.ssc_data_set_number(data, "LeadAcid_q10_computed", 17.856000900268555f);
		SSCAPIJNI.ssc_data_set_number(data, "LeadAcid_qn_computed", 11.520000457763672f);
		SSCAPIJNI.ssc_data_set_number(data, "LeadAcid_tn", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_initial_SOC", 50f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_minimum_SOC", 15f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_maximum_SOC", 95f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_minimum_modetime", 10f);
		double[] p_batt_lifetime_matrix = {10f, 0f, 100.85299999999999f, 10f, 1250f, 94.884f, 10f, 2500f, 88.914699999999996f, 10f, 3750f, 82.945400000000006f, 10f, 5000f, 76.976100000000002f, 20f, 0f, 100.85299999999999f, 20f, 1250f, 94.879800000000003f, 20f, 2500f, 88.906300000000002f, 20f, 3750f, 82.9328f, 20f, 5000f, 76.959299999999999f, 40f, 0f, 100.85299999999999f, 40f, 1250f, 94.782200000000003f, 40f, 2500f, 88.710999999999999f, 40f, 3750f, 82.639700000000005f, 40f, 5000f, 76.568200000000004f, 80f, 0f, 100.85299999999999f, 80f, 1250f, 92.483800000000002f, 80f, 2500f, 84.054299999999998f, 80f, 3750f, 75.560000000000002f, 80f, 5000f, 66.995599999999996f, 100f, 0f, 100.85299999999999f, 100f, 1250f, 88.125600000000006f, 100f, 2500f, 74.873199999999997f, 100f, 3750f, 60.951099999999997f, 100f, 5000f, 46.1312f};
		SSCAPIJNI.ssc_data_set_matrix(data, "batt_lifetime_matrix", p_batt_lifetime_matrix, 25, 3);
		SSCAPIJNI.ssc_data_set_number(data, "batt_calendar_choice", 1f);
		double[] p_batt_calendar_lifetime_matrix = {0f, 100f, 3650f, 80f, 7300f, 50f};
		SSCAPIJNI.ssc_data_set_matrix(data, "batt_calendar_lifetime_matrix", p_batt_calendar_lifetime_matrix, 3, 2);
		SSCAPIJNI.ssc_data_set_number(data, "batt_calendar_q0", 1.02f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_calendar_a", 0.00266f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_calendar_b", -7280f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_calendar_c", 930f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_replacement_capacity", 50f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_replacement_option", 1f);
		double[] p_batt_replacement_schedule_percent = {0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_replacement_schedule_percent", p_batt_replacement_schedule_percent, 25);
		double[] p_om_replacement_cost1 = {316.31f};
		SSCAPIJNI.ssc_data_set_array(data, "om_replacement_cost1", p_om_replacement_cost1, 1);
		SSCAPIJNI.ssc_data_set_number(data, "batt_mass", 95.12554931640625f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_surface_area", 1.5964852571487427f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_Cp", 1500f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_h_to_ambient", 7.5f);
		set_array(data, "batt_room_temperature_celsius", currentDirectory + "\\batt_room_temperature_celsius.csv", 8760);
		double[] p_cap_vs_temp = {0f, 80.200000000000003f, 23f, 100f, 30f, 103.09999999999999f, 45f, 105.40000000000001f};
		SSCAPIJNI.ssc_data_set_matrix(data, "cap_vs_temp", p_cap_vs_temp, 4, 2);
		double[] p_dispatch_manual_charge = {1f, 1f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "dispatch_manual_charge", p_dispatch_manual_charge, 6);
		double[] p_dispatch_manual_discharge = {0f, 1f, 1f, 1f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "dispatch_manual_discharge", p_dispatch_manual_discharge, 6);
		double[] p_dispatch_manual_gridcharge = {0f, 0f, 0f, 0f, 0f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "dispatch_manual_gridcharge", p_dispatch_manual_gridcharge, 6);
		double[] p_dispatch_manual_percent_discharge = {25f, 25f, 25f, 0f};
		SSCAPIJNI.ssc_data_set_array(data, "dispatch_manual_percent_discharge", p_dispatch_manual_percent_discharge, 4);
		double[] p_dispatch_manual_percent_gridcharge = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "dispatch_manual_percent_gridcharge", p_dispatch_manual_percent_gridcharge, 1);
		double[] p_dispatch_manual_sched = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "dispatch_manual_sched", p_dispatch_manual_sched, 12, 24);
		double[] p_dispatch_manual_sched_weekend = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "dispatch_manual_sched_weekend", p_dispatch_manual_sched_weekend, 12, 24);
		set_array(data, "batt_target_power", currentDirectory + "\\batt_target_power.csv", 8760);
		double[] p_batt_target_power_monthly = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_target_power_monthly", p_batt_target_power_monthly, 12);
		SSCAPIJNI.ssc_data_set_number(data, "batt_target_choice", 0f);
		double[] p_batt_custom_dispatch = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_custom_dispatch", p_batt_custom_dispatch, 1);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dispatch_choice", 4f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dispatch_auto_can_fuelcellcharge", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dispatch_auto_can_gridcharge", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_dispatch_auto_can_charge", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "batt_cycle_cost_choice", 0f);
		double[] p_batt_cycle_cost = {0.10000000000000001f};
		SSCAPIJNI.ssc_data_set_array(data, "batt_cycle_cost", p_batt_cycle_cost, 1);
		SSCAPIJNI.ssc_data_set_number(data, "inflation_rate", 2.5f);
		double[] p_rate_escalation = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "rate_escalation", p_rate_escalation, 1);
		SSCAPIJNI.ssc_data_set_number(data, "ur_metering_option", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_nm_yearend_sell_rate", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_nm_credit_month", 11f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_nm_credit_rollover", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_monthly_fixed_charge", 10f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_monthly_min_charge", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_annual_min_charge", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ur_en_ts_sell_rate", 0f);
		double[] p_ur_ts_sell_rate = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "ur_ts_sell_rate", p_ur_ts_sell_rate, 1);
		SSCAPIJNI.ssc_data_set_number(data, "ur_en_ts_buy_rate", 0f);
		set_array(data, "ur_ts_buy_rate", currentDirectory + "\\ur_ts_buy_rate.csv", 8760);
		double[] p_ur_ec_sched_weekday = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 4f, 4f, 4f, 4f, 4f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 2f, 2f, 2f, 2f, 2f, 3f, 3f, 3f, 3f, 3f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_ec_sched_weekday", p_ur_ec_sched_weekday, 12, 24);
		double[] p_ur_ec_sched_weekend = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_ec_sched_weekend", p_ur_ec_sched_weekend, 12, 24);
		double[] p_ur_ec_tou_mat = {1f, 1f, 9.9999999999999998e+37f, 0f, 0.10000000000000001f, 0f, 2f, 1f, 9.9999999999999998e+37f, 0f, 0.074999999999999997f, 0f, 3f, 1f, 9.9999999999999998e+37f, 0f, 0.20000000000000001f, 0f, 4f, 1f, 9.9999999999999998e+37f, 0f, 0.40000000000000002f, 0f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_ec_tou_mat", p_ur_ec_tou_mat, 4, 6);
		SSCAPIJNI.ssc_data_set_number(data, "ur_dc_enable", 0f);
		double[] p_ur_dc_sched_weekday = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_dc_sched_weekday", p_ur_dc_sched_weekday, 12, 24);
		double[] p_ur_dc_sched_weekend = {1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f, 1f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_dc_sched_weekend", p_ur_dc_sched_weekend, 12, 24);
		double[] p_ur_dc_tou_mat = {1f, 1f, 9.9999999999999998e+37f, 0f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_dc_tou_mat", p_ur_dc_tou_mat, 1, 4);
		double[] p_ur_dc_flat_mat = {0f, 1f, 9.9999999999999998e+37f, 0f, 1f, 1f, 9.9999999999999998e+37f, 0f, 2f, 1f, 9.9999999999999998e+37f, 0f, 3f, 1f, 9.9999999999999998e+37f, 0f, 4f, 1f, 9.9999999999999998e+37f, 0f, 5f, 1f, 9.9999999999999998e+37f, 0f, 6f, 1f, 9.9999999999999998e+37f, 0f, 7f, 1f, 9.9999999999999998e+37f, 0f, 8f, 1f, 9.9999999999999998e+37f, 0f, 9f, 1f, 9.9999999999999998e+37f, 0f, 10f, 1f, 9.9999999999999998e+37f, 0f, 11f, 1f, 9.9999999999999998e+37f, 0f};
		SSCAPIJNI.ssc_data_set_matrix(data, "ur_dc_flat_mat", p_ur_dc_flat_mat, 12, 4);
		mod = SSCAPIJNI.ssc_module_create("pvsamv1");
		if (SSCAPIJNI.ssc_module_exec(mod, data) == 0) {
			System.out.println("error during simulation 2.");
			SSCAPIJNI.ssc_module_free(mod);
			SSCAPIJNI.ssc_data_free(data);
			return;
		}
		SSCAPIJNI.ssc_module_free(mod);
		SSCAPIJNI.ssc_data_set_number(data, "enable_interconnection_limit", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "grid_interconnection_limit_kwac", 100000f);
		set_array(data, "grid_curtailment", currentDirectory + "\\grid_curtailment.csv", 8760);
		mod = SSCAPIJNI.ssc_module_create("grid");
		if (SSCAPIJNI.ssc_module_exec(mod, data) == 0) {
			System.out.println("error during simulation 3.");
			SSCAPIJNI.ssc_module_free(mod);
			SSCAPIJNI.ssc_data_free(data);
			return;
		}
		SSCAPIJNI.ssc_module_free(mod);
		double[] p_degradation = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "degradation", p_degradation, 1);
		mod = SSCAPIJNI.ssc_module_create("utilityrate5");
		if (SSCAPIJNI.ssc_module_exec(mod, data) == 0) {
			System.out.println("error during simulation 4.");
			SSCAPIJNI.ssc_module_free(mod);
			SSCAPIJNI.ssc_data_free(data);
			return;
		}
		SSCAPIJNI.ssc_module_free(mod);
		double[] p_federal_tax_rate = {21f};
		SSCAPIJNI.ssc_data_set_array(data, "federal_tax_rate", p_federal_tax_rate, 1);
		double[] p_state_tax_rate = {7f};
		SSCAPIJNI.ssc_data_set_array(data, "state_tax_rate", p_state_tax_rate, 1);
		SSCAPIJNI.ssc_data_set_number(data, "property_tax_rate", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "prop_tax_cost_assessed_percent", 100f);
		SSCAPIJNI.ssc_data_set_number(data, "prop_tax_assessed_decline", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "real_discount_rate", 6.4000000000000004f);
		SSCAPIJNI.ssc_data_set_number(data, "insurance_rate", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "loan_term", 25f);
		SSCAPIJNI.ssc_data_set_number(data, "loan_rate", 5f);
		SSCAPIJNI.ssc_data_set_number(data, "debt_fraction", 100f);
		double[] p_om_fixed = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "om_fixed", p_om_fixed, 1);
		SSCAPIJNI.ssc_data_set_number(data, "om_fixed_escal", 0f);
		double[] p_om_production = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "om_production", p_om_production, 1);
		SSCAPIJNI.ssc_data_set_number(data, "om_production_escal", 0f);
		double[] p_om_capacity = {29f};
		SSCAPIJNI.ssc_data_set_array(data, "om_capacity", p_om_capacity, 1);
		SSCAPIJNI.ssc_data_set_number(data, "om_capacity_escal", 0f);
		double[] p_om_fuel_cost = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "om_fuel_cost", p_om_fuel_cost, 1);
		SSCAPIJNI.ssc_data_set_number(data, "om_fuel_cost_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "om_replacement_cost_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_amount_deprbas_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_amount_deprbas_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_amount_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_amount_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_percent", 26f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_percent_deprbas_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_fed_percent_deprbas_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_percent", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_percent_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "itc_sta_percent_deprbas_sta", 0f);
		double[] p_ptc_fed_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "ptc_fed_amount", p_ptc_fed_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "ptc_fed_term", 10f);
		SSCAPIJNI.ssc_data_set_number(data, "ptc_fed_escal", 0f);
		double[] p_ptc_sta_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "ptc_sta_amount", p_ptc_sta_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "ptc_sta_term", 10f);
		SSCAPIJNI.ssc_data_set_number(data, "ptc_sta_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_amount_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_amount_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_amount_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_amount_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_amount_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_amount_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_amount_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_amount_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_amount_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_amount_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_amount_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_amount_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_amount_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_amount_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_amount_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_amount_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_fed_percent_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_sta_percent_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_uti_percent_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "ibi_oth_percent_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_fed_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_sta_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_uti_deprbas_sta", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_amount", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_maxvalue", 9.9999999999999998e+37f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_deprbas_fed", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "cbi_oth_deprbas_sta", 0f);
		double[] p_pbi_fed_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "pbi_fed_amount", p_pbi_fed_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_fed_term", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_fed_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_fed_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_fed_tax_sta", 1f);
		double[] p_pbi_sta_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "pbi_sta_amount", p_pbi_sta_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_sta_term", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_sta_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_sta_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_sta_tax_sta", 1f);
		double[] p_pbi_uti_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "pbi_uti_amount", p_pbi_uti_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_uti_term", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_uti_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_uti_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_uti_tax_sta", 1f);
		double[] p_pbi_oth_amount = {0f};
		SSCAPIJNI.ssc_data_set_array(data, "pbi_oth_amount", p_pbi_oth_amount, 1);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_oth_term", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_oth_escal", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_oth_tax_fed", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "pbi_oth_tax_sta", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "battery_per_kWh", 316.31f);
		SSCAPIJNI.ssc_data_set_number(data, "market", 0f);
		SSCAPIJNI.ssc_data_set_number(data, "mortgage", 1f);
		SSCAPIJNI.ssc_data_set_number(data, "total_installed_cost", 20909.646484375f);
		SSCAPIJNI.ssc_data_set_number(data, "salvage_percentage", 0f);
		mod = SSCAPIJNI.ssc_module_create("cashloan");
		if (SSCAPIJNI.ssc_module_exec(mod, data) == 0) {
			System.out.println("error during simulation 5.");
			SSCAPIJNI.ssc_module_free(mod);
			SSCAPIJNI.ssc_data_free(data);
			return;
		}
		SSCAPIJNI.ssc_module_free(mod);
		double[] annual_energy = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "annual_energy", annual_energy);

		System.out.println("Annual energy (year 1) = " + annual_energy[0]);
		double[] capacity_factor = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "capacity_factor", capacity_factor);
		System.out.println("Capacity factor (year 1) = " + capacity_factor[0]);
		double[] kwh_per_kw = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "kwh_per_kw", kwh_per_kw);
		System.out.println("Energy yield (year 1) = " + kwh_per_kw[0]);
		double[] performance_ratio = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "performance_ratio", performance_ratio);
		System.out.println("Performance ratio (year 1) = " + performance_ratio[0]);
		double[] average_battery_roundtrip_efficiency = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "average_battery_roundtrip_efficiency", average_battery_roundtrip_efficiency);
		System.out.println("Battery roundtrip efficiency = " + average_battery_roundtrip_efficiency[0]);
		double[] batt_system_charge_percent = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "batt_system_charge_percent", batt_system_charge_percent);
		System.out.println("Battery charge energy from system = " + batt_system_charge_percent[0]);
		double[] lcoe_nom = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "lcoe_nom", lcoe_nom);
		System.out.println("Levelized COE (nominal) = " + lcoe_nom[0]);
		double[] lcoe_real = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "lcoe_real", lcoe_real);
		System.out.println("Levelized COE (real) = " + lcoe_real[0]);
		double[] elec_cost_without_system_year1 = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "elec_cost_without_system_year1", elec_cost_without_system_year1);
		System.out.println("Electricity bill without system (year 1) = " + elec_cost_without_system_year1[0]);
		double[] elec_cost_with_system_year1 = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "elec_cost_with_system_year1", elec_cost_with_system_year1);
		System.out.println("Electricity bill with system (year 1) = " + elec_cost_with_system_year1[0]);
		double[] savings_year1 = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "savings_year1", savings_year1);
		System.out.println("Net savings with system (year 1) = " + savings_year1[0]);
		double[] npv = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "npv", npv);
		System.out.println("Net present value = " + npv[0]);
		double[] payback = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "payback", payback);
		System.out.println("Simple payback period = " + payback[0]);
		double[] discounted_payback = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "discounted_payback", discounted_payback);
		System.out.println("Discounted payback period = " + discounted_payback[0]);
		double[] adjusted_installed_cost = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "adjusted_installed_cost", adjusted_installed_cost);
		System.out.println("Net capital cost = " + adjusted_installed_cost[0]);
		double[] first_cost = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "first_cost", first_cost);
		System.out.println("Equity = " + first_cost[0]);
		double[] loan_amount = {0.0f};
		SSCAPIJNI.ssc_data_get_number(data, "loan_amount", loan_amount);
		System.out.println("Debt = " + loan_amount[0]);
		SSCAPIJNI.ssc_data_free(data);
	}
}
